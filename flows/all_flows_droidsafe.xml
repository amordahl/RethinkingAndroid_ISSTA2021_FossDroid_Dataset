<flows><flow generating_config="config_DroidSafe_23.xml" id="ds-0">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)&gt;($r3, $r1) (provider)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r3</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void setBackgroundUri(android.net.Uri)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-1">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-2">
            <reference type="from">
                <statement>
                    <statementfull>	$r21 = virtualinvoke $r2.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-3">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)&gt;($r4) (renderscript)</statementfull>
                    <statementgeneric>android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-4">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-5">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getActionIndex()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getActionIndex()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-6">
            <reference type="from">
                <statement>
                    <statementfull>	$r21 = virtualinvoke $r2.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-7">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-8">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)&gt;($r3, $r1) (provider)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r3</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void setBackgroundUri(android.net.Uri)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-9">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r4.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-10">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r4.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-11">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-12">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getActionIndex()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getActionIndex()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-13">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)&gt;($r4) (renderscript)</statementfull>
                    <statementgeneric>android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-14">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-15">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r4.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-16">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getActionIndex()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getActionIndex()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-17">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)&gt;($r4) (renderscript)</statementfull>
                    <statementgeneric>android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-18">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-19">
            <reference type="from">
                <statement>
                    <statementfull>	$r21 = virtualinvoke $r2.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-20">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)&gt;($r3, $r1) (provider)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r3</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void setBackgroundUri(android.net.Uri)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash: void onCreate(android.os.Bundle)&gt;</method>
                <classname>anupam.acrylic.Splash</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-21">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r4.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-22">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-23">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)&gt;($r4) (renderscript)</statementfull>
                    <statementgeneric>android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_23.xml" id="ds-24">
            <reference type="from">
                <statement>
                    <statementfull>	$r21 = virtualinvoke $r2.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: java.io.File takeScreenshot(boolean)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-25">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getActionIndex()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getActionIndex()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-26">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;android.view.View: android.graphics.Bitmap getDrawingCache()&gt;() (SCREEN)</statementfull>
                    <statementgeneric>android.view.View: android.graphics.Bitmap getDrawingCache()</statementgeneric>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint$MyView: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>anupam.acrylic.EasyPaint$MyView</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-27">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)&gt;($r3, $r1) (provider)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r3</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.EasyPaint: void setBackgroundUri(android.net.Uri)&gt;</method>
                <classname>anupam.acrylic.EasyPaint</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;anupam.acrylic.Splash$1: void run()&gt;</method>
                <classname>anupam.acrylic.Splash$1</classname>
                <app>
                    <file>anupam.acrylic_17.apk</file>
                    <hashes>
                        <hash type="MD5">8f4b6beeeda18421827dbc41667ee45a</hash>
                        <hash type="SHA-1">784b5b16dad0892ffe62a60ed8bb17ff74600b9a</hash>
                        <hash type="SHA-256">b06660fd279f443c74aa35b2fc79bd1689f04fb8a23a892d4cf73340de8a261e</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-28">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-29">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-30">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-31">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)&gt;($r6, $l0) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r6</value>
                        </parameter>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery: void &lt;init&gt;(com.angrydoughnuts.android.alarmclock.MediaPicker,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-32">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-33">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-34">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-35">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-36">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-37">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimePicker: void refresh(android.widget.EditText,android.widget.TextView,android.widget.Button)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimePicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-38">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-39">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-40">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-41">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-42">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-43">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-44">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-45">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-46">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper: void onCreate(android.database.sqlite.SQLiteDatabase)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider$DbAlarmClockHelper</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-47">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-48">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-49">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-50">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-51">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-52">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-53">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-54">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-55">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-56">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-57">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-58">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-59">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-60">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-61">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-62">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-63">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-64">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-65">
            <reference type="from">
                <statement>
                    <statementfull>	$l9 = virtualinvoke $r2.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-66">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-67">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimePicker: void refresh(android.widget.EditText,android.widget.TextView,android.widget.Button)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimePicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-68">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-69">
            <reference type="from">
                <statement>
                    <statementfull>	$i4 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-70">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)&gt;($r6, $l0) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r6</value>
                        </parameter>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery: void &lt;init&gt;(com.angrydoughnuts.android.alarmclock.MediaPicker,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-71">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-72">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-73">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-74">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-75">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimePicker: void refresh(android.widget.EditText,android.widget.TextView,android.widget.Button)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimePicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-76">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-77">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-78">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-79">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-80">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-81">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-82">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-83">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-84">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)&gt;($r6, $l0) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r6</value>
                        </parameter>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery: void &lt;init&gt;(com.angrydoughnuts.android.alarmclock.MediaPicker,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-85">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-86">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-87">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-88">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-89">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-90">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-91">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-92">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-93">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-94">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-95">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-96">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-97">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-98">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-99">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-100">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-101">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-102">
            <reference type="from">
                <statement>
                    <statementfull>	$l9 = virtualinvoke $r2.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-103">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-104">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-105">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-106">
            <reference type="from">
                <statement>
                    <statementfull>	$l9 = virtualinvoke $r2.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-107">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-108">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-109">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-110">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-111">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-112">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-113">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-114">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-115">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-116">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-117">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-118">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-119">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-120">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-121">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-122">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-123">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-124">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-125">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-126">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-127">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-128">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-129">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-130">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-131">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-132">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-133">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-134">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-135">
            <reference type="from">
                <statement>
                    <statementfull>	$i4 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-136">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-137">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-138">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimePicker: void refresh(android.widget.EditText,android.widget.TextView,android.widget.Button)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimePicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-139">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-140">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-141">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-142">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-143">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-144">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-145">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-146">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)&gt;($r6, $l0) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r6</value>
                        </parameter>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery: void &lt;init&gt;(com.angrydoughnuts.android.alarmclock.MediaPicker,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-147">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-148">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-149">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-150">
            <reference type="from">
                <statement>
                    <statementfull>	$l9 = virtualinvoke $r2.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_11(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-151">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-152">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_10(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-153">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-154">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)&gt;($r6, $l0) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r6</value>
                        </parameter>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery: void &lt;init&gt;(com.angrydoughnuts.android.alarmclock.MediaPicker,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-155">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-156">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-157">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-158">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimePicker: void refresh(android.widget.EditText,android.widget.TextView,android.widget.Button)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimePicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-159">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void snoozeAll(long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-160">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-161">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void handleTriggerAlarm(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-162">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void dismissAll()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-163">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: void removeAlarmTrigger(android.content.Context,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-164">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: long newAlarm_ds_method_clone_2(android.content.Context,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-165">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-166">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-167">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_nova.xml" id="ds-168">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_nova.xml" id="ds-169">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_nova.xml" id="ds-170">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-171">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-172">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)&gt;($r6, $l0) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r6</value>
                        </parameter>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery: void &lt;init&gt;(com.angrydoughnuts.android.alarmclock.MediaPicker,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-173">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-174">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-175">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-176">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-177">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-178">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-179">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_nova.xml" id="ds-180">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-181">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-182">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-183">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-184">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-185">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-186">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-187">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-188">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-189">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-190">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-191">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-192">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-193">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-194">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_nova.xml" id="ds-195">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-196">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-197">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-198">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-199">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-200">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-201">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-202">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-203">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-204">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-205">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-206">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-207">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-208">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-209">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-210">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_17(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-211">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_nova.xml" id="ds-212">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-213">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-214">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-215">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-216">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-217">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-218">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-219">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-220">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-221">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimePicker: void refresh(android.widget.EditText,android.widget.TextView,android.widget.Button)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimePicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementfull>
                    <statementgeneric>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-222">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void release()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-223">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-224">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-225">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-226">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-227">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-228">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-229">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-230">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-231">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-232">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-233">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_nova.xml" id="ds-234">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-235">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-236">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-237">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-238">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessageDelayed(android.os.Message,long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1: void handleMessage(android.os.Message)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$1</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-239">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$2: void run()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$2</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-240">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$2: void run()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$2</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-241">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$2: void run()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$2</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-242">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$2: void run()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$2</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-243">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_7(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$2: void run()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms$2</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-244">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)&gt;($r6, $l0) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r6</value>
                        </parameter>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery: void &lt;init&gt;(com.angrydoughnuts.android.alarmclock.MediaPicker,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$AlbumsQuery</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-245">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-246">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-247">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-248">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-249">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-250">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-251">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-252">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-253">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimePicker: void refresh(android.widget.EditText,android.widget.TextView,android.widget.Button)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimePicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-254">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-255">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-256">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-257">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-258">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r9.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(4) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms: void &lt;init&gt;(android.content.Context,android.os.PowerManager$WakeLock,com.angrydoughnuts.android.alarmclock.DbUtil$Settings)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$ActiveAlarms</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationService$AlarmTriggerReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-259">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-260">
            <reference type="from">
                <statement>
                    <statementfull>	$i4 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-261">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-262">
            <reference type="from">
                <statement>
                    <statementfull>	$i4 = virtualinvoke $r2.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-263">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-264">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-265">
            <reference type="from">
                <statement>
                    <statementfull>	$l9 = virtualinvoke $r2.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setInAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-266">
            <reference type="from">
                <statement>
                    <statementfull>	$l9 = virtualinvoke $r2.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementfull>
                    <statementgeneric>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Context</type>
                            <value>android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker: android.view.View newFlip()&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-267">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-268">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-269">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-270">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-271">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-272">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void rescheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-273">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void rescheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-274">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void scheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-275">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void scheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-276">
            <reference type="from">
                <statement>
                    <statementfull>	$r15 = virtualinvoke $r11.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (GUI_TEXT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmNotificationActivity</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void scheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-277">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void clearSnooze(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-278">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void clearSnooze(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-279">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-280">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-281">
            <reference type="from">
                <statement>
                    <statementfull>	$r43 = virtualinvoke $r0.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034117, $r41) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034117</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r41</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void rescheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-282">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void rescheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-283">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void rescheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-284">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void rescheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-285">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void scheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_74.xml" id="ds-286">
            <reference type="from">
                <statement>
                    <statementfull>	$l6 = virtualinvoke $r20.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void scheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-287">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r3.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-288">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-289">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void rescheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-290">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.MediaPicker$6: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.MediaPicker$6</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void clearSnooze(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-291">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r0.&lt;java.util.Calendar: int get(int)&gt;(6) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.util.Calendar nextOccurrence(java.util.Calendar,int,int)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void scheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-292">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r2.&lt;android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)&gt;("id") (content)</statementfull>
                    <statementgeneric>android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.AlarmClockProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.AlarmClockProvider</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void scheduleAll(android.content.Context)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-293">
            <reference type="from">
                <statement>
                    <statementfull>	$l5 = virtualinvoke $r14.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.TimeUtil: java.lang.String until(android.content.Context,java.util.Calendar,java.util.Calendar)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.TimeUtil</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.angrydoughnuts.android.alarmclock.SystemMessageReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>com.angrydoughnuts.android.alarmclock.SystemMessageReceiver</classname>
                <app>
                    <file>com.angrydoughnuts.android.alarmclock_15.apk</file>
                    <hashes>
                        <hash type="MD5">41a3ba6707763e7bf473ac7c4fc5d314</hash>
                        <hash type="SHA-1">529661adf62eb3b9975d3f49fa5b8807b6446a59</hash>
                        <hash type="SHA-256">545b577006bd9d93e6e272fa343f05334dcb0061888b8ed664676ea53e1e01c2</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-294">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;java.text.DateFormat: java.lang.String format(java.util.Date)&gt;($r3) (DATE_TIME)</statementfull>
                    <statementgeneric>java.text.DateFormat: java.lang.String format(java.util.Date)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.util.Date</type>
                            <value>$r3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Adapter.ExerciseAdapter: void &lt;init&gt;(android.content.Context,java.util.List)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Adapter.ExerciseAdapter</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-295">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: void addExercise(android.view.View)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-296">
            <reference type="from">
                <statement>
                    <statementfull>	$i11 = virtualinvoke $r3.&lt;java.util.Date: int getSeconds()&gt;() (util)</statementfull>
                    <statementgeneric>java.util.Date: int getSeconds()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-297">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r13.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034122, $r14) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034122</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r14</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Adapter.TodayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Adapter.TodayAdapter</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-298">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r3.&lt;java.util.Date: int getMinutes()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.util.Date: int getMinutes()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-299">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.util.Date: int getHours()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.util.Date: int getHours()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.DaoMaster$DevOpenHelper</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-300">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: void addExercise(android.view.View)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-301">
            <reference type="from">
                <statement>
                    <statementfull>	$r17 = virtualinvoke $r13.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034122, $r14) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034122</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r14</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Adapter.TodayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Adapter.TodayAdapter</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-302">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.util.Date: int getHours()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.util.Date: int getHours()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-303">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r3.&lt;java.util.Date: int getMinutes()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.util.Date: int getMinutes()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-304">
            <reference type="from">
                <statement>
                    <statementfull>	$i11 = virtualinvoke $r3.&lt;java.util.Date: int getSeconds()&gt;() (util)</statementfull>
                    <statementgeneric>java.util.Date: int getSeconds()</statementgeneric>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Activity.AddExerciseActivity: java.util.List getTodayExercises(java.lang.Long)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Activity.AddExerciseActivity</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-305">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r11.&lt;java.text.DateFormat: java.lang.String format(java.util.Date)&gt;($r3) (DATE_TIME)</statementfull>
                    <statementgeneric>java.text.DateFormat: java.lang.String format(java.util.Date)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.util.Date</type>
                            <value>$r3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Adapter.ExerciseAdapter: void &lt;init&gt;(android.content.Context,java.util.List)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Adapter.ExerciseAdapter</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementfull>
                    <statementgeneric>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;com.github.yeriomin.workoutlog.Model.ExerciseDao: void createTable(android.database.sqlite.SQLiteDatabase,boolean)&gt;</method>
                <classname>com.github.yeriomin.workoutlog.Model.ExerciseDao</classname>
                <app>
                    <file>com.github.yeriomin.workoutlog_2.apk</file>
                    <hashes>
                        <hash type="MD5">9f733bd3cb389aba1698ae806ff4ab4e</hash>
                        <hash type="SHA-1">f427d4ca3be0327ba9fcc040c2c1152de99bd3bd</hash>
                        <hash type="SHA-256">8ef05df22956daf816facafe27dc134087fed02b13802f9f057ef95c96e50df5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-306">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r8.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;daniel_32.flexiblewallpaper.FlexibleWallpaperSettingsActivity: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>daniel_32.flexiblewallpaper.FlexibleWallpaperSettingsActivity</classname>
                <app>
                    <file>daniel_32.flexiblewallpaper_2.apk</file>
                    <hashes>
                        <hash type="MD5">a4f66e21cefac5c2051025c061e1e0dd</hash>
                        <hash type="SHA-1">1f62c43bdc45cfb32a32645055af19ca4a4ddf54</hash>
                        <hash type="SHA-256">e680c0a6b8ed7291a580def660228b2bf647ad7b5a807bdb8fcb4df4d9445227</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;daniel_32.flexiblewallpaper.FlexibleWallpaperSettingsActivity: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>daniel_32.flexiblewallpaper.FlexibleWallpaperSettingsActivity</classname>
                <app>
                    <file>daniel_32.flexiblewallpaper_2.apk</file>
                    <hashes>
                        <hash type="MD5">a4f66e21cefac5c2051025c061e1e0dd</hash>
                        <hash type="SHA-1">1f62c43bdc45cfb32a32645055af19ca4a4ddf54</hash>
                        <hash type="SHA-256">e680c0a6b8ed7291a580def660228b2bf647ad7b5a807bdb8fcb4df4d9445227</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-307">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-308">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-309">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-310">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-311">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-312">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-313">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-314">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-315">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-316">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-317">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-318">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-319">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-320">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-321">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-322">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-323">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-324">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-325">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-326">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-327">
            <reference type="from">
                <statement>
                    <statementfull>	$r1 = virtualinvoke $r0.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.FileCompat$Api8OrEarlier: boolean canExecute(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.compat.FileCompat$Api8OrEarlier</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-328">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-329">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-330">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-331">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-332">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-333">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-334">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-335">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-336">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-337">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-338">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-339">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-340">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-341">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-342">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-343">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-344">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-345">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-346">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-347">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-348">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-349">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-350">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-351">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-352">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-353">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-354">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyWindowSize(int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-355">
            <reference type="from">
                <statement>
                    <statementfull>	$r1 = virtualinvoke $r0.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.FileCompat$Api8OrEarlier: boolean canExecute(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.compat.FileCompat$Api8OrEarlier</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-356">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.GenericTermSession: void setPtyUTF8Mode(boolean)&gt;</method>
                <classname>jackpal.androidterm.GenericTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-357">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-358">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-359">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-360">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-361">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-362">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-363">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-364">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-365">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-366">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-367">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-368">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-369">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-370">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-371">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-372">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-373">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-374">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-375">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.content.ComponentName getComponent()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.content.ComponentName getComponent()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-376">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-377">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-378">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-379">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.RunShortcut: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-380">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-381">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-382">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-383">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-384">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-385">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-386">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-387">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-388">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-389">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-390">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-391">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-392">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-393">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-394">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-395">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-396">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-397">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-398">
            <reference type="from">
                <statement>
                    <statementfull>	$r1 = virtualinvoke $r0.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.FileCompat$Api8OrEarlier: boolean canExecute(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.compat.FileCompat$Api8OrEarlier</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-399">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;java.lang.System: java.lang.String getenv(java.lang.String)&gt;("PATH") (lang)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String getenv(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"PATH"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: void initializeSession()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-400">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-401">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-402">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-403">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-404">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-405">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-406">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-407">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-408">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-409">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-410">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-411">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-412">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-413">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-414">
            <reference type="from">
                <statement>
                    <statementfull>	$r1 = virtualinvoke $r0.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.FileCompat$Api8OrEarlier: boolean canExecute(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.compat.FileCompat$Api8OrEarlier</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-415">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-416">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-417">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-418">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-419">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-420">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-421">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-422">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-423">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-424">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-425">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-426">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-427">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-428">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-429">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_12(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: int createSubprocess(java.lang.String,java.lang.String[])&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-430">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.StringBuilder: java.lang.String substring(int,int)</statementfull>
                    <statementgeneric>java.lang.StringBuilder: java.lang.String substring(int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.lang.StringBuilder: java.lang.String substring(int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession: java.lang.String checkPath(java.lang.String)&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-431">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-432">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-433">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-434">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-435">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-436">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-437">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-438">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-439">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-440">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-441">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-442">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-443">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-444">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r0.&lt;android.os.ParcelFileDescriptor: int getFd()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.ParcelFileDescriptor: int getFd()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.FdHelperHoneycomb: int getFd_ds_method_clone_2(android.os.ParcelFileDescriptor)&gt;</method>
                <classname>jackpal.androidterm.FdHelperHoneycomb</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.ShellTermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.ShellTermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-445">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-446">
            <reference type="from">
                <statement>
                    <statementfull>	$r1 = virtualinvoke $r0.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.FileCompat$Api8OrEarlier: boolean canExecute(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.compat.FileCompat$Api8OrEarlier</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-447">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-448">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r0.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: boolean isEventFromToggleDevice(android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-449">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-450">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-451">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-452">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-453">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-454">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-455">
            <reference type="from">
                <statement>
                    <statementfull>	$r1 = virtualinvoke $r0.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.FileCompat$Api8OrEarlier: boolean canExecute(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.compat.FileCompat$Api8OrEarlier</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-456">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-457">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-458">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-459">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-460">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-461">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-462">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-463">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-464">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-465">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r8.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-466">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-467">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-468">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-469">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-470">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-471">
            <reference type="from">
                <statement>
                    <statementfull>	$r1 = virtualinvoke $r0.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.FileCompat$Api8OrEarlier: boolean canExecute(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.compat.FileCompat$Api8OrEarlier</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-472">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-473">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-474">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-475">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-476">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-477">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-478">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-479">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-480">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-481">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-482">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-483">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-484">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-485">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-486">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-487">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-488">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-489">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-490">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-491">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.content.ComponentName getComponent()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.content.ComponentName getComponent()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-492">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-493">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-494">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-495">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r0.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: boolean isEventFromToggleDevice(android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-496">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-497">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-498">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r8.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-499">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-500">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-501">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-502">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-503">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-504">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-505">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-506">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-507">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r0.&lt;android.os.ParcelFileDescriptor: int getFd()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.ParcelFileDescriptor: int getFd()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.FdHelperHoneycomb: int getFd_ds_method_clone_2(android.os.ParcelFileDescriptor)&gt;</method>
                <classname>jackpal.androidterm.FdHelperHoneycomb</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-508">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-509">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-510">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-511">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-512">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-513">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-514">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-515">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-516">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-517">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-518">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-519">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-520">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-521">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-522">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-523">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-524">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-525">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-526">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-527">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-528">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-529">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-530">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-531">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-532">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-533">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-534">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-535">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-536">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-537">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-538">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-539">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-540">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-541">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-542">
            <reference type="from">
                <statement>
                    <statementfull>	$r1 = virtualinvoke $r0.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.FileCompat$Api8OrEarlier: boolean canExecute(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.compat.FileCompat$Api8OrEarlier</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-543">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r8.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-544">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-545">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-546">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-547">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-548">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.content.ComponentName getComponent()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.content.ComponentName getComponent()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-549">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-550">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-551">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r18.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-552">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-553">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-554">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-555">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-556">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-557">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-558">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-559">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r0.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: boolean isEventFromToggleDevice(android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-560">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-561">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-562">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-563">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-564">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-565">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-566">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-567">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-568">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-569">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-570">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-571">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-572">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-573">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-574">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-575">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-576">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-577">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-578">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-579">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-580">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-581">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-582">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-583">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-584">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-585">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-586">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-587">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-588">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-589">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r0.&lt;android.os.ParcelFileDescriptor: int getFd()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.ParcelFileDescriptor: int getFd()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.FdHelperHoneycomb: int getFd_ds_method_clone_2(android.os.ParcelFileDescriptor)&gt;</method>
                <classname>jackpal.androidterm.FdHelperHoneycomb</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-590">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-591">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-592">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-593">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-594">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-595">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-596">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.content.ComponentName getComponent()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.content.ComponentName getComponent()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-597">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-598">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-599">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onStop()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-600">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-601">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-602">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-603">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-604">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.view.ContextThemeWrapper: void setTheme(int)</statementfull>
                    <statementgeneric>android.view.ContextThemeWrapper: void setTheme(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.view.ContextThemeWrapper: void setTheme(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onCreate(android.os.Bundle)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-605">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-606">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void updatePrefs()&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-607">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-608">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-609">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-610">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-611">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r8.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-612">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-613">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-614">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-615">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-616">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-617">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-618">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-619">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-620">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.WindowList: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;</method>
                <classname>jackpal.androidterm.WindowList</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-621">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-622">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-623">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-624">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-625">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-626">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-627">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-628">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-629">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-630">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-631">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-632">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-633">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-634">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-635">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-636">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-637">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-638">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-639">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-640">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-641">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-642">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-643">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-644">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-645">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-646">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-647">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-648">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-649">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-650">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-651">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-652">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-653">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-654">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-655">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-656">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-657">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-658">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-659">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-660">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-661">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-662">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-663">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-664">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-665">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-666">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-667">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-668">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-669">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-670">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-671">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-672">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-673">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-674">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-675">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-676">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-677">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-678">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-679">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-680">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-681">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-682">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-683">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-684">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-685">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-686">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-687">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-688">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeLong(long)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeLong(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>java.io.DataOutputStream: void writeLong(long</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-689">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-690">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-691">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-692">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.DataOutputStream: void writeInt(int)</statementfull>
                    <statementgeneric>java.io.DataOutputStream: void writeInt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>java.io.DataOutputStream: void writeInt(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-693">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-694">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-695">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-696">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-697">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-698">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-699">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-700">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-701">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-702">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-703">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.content.ComponentName getComponent()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.content.ComponentName getComponent()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-704">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-705">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-706">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-707">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-708">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-709">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-710">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-711">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-712">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-713">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-714">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-715">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-716">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-717">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.compat.ServiceForegroundCompat: void invokeMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])&gt;</method>
                <classname>jackpal.androidterm.compat.ServiceForegroundCompat</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-718">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-719">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-720">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-721">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-722">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-723">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-724">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-725">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-726">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-727">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-728">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-729">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-730">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.ColorMatrix: void set(float[])</statementfull>
                    <statementgeneric>android.graphics.ColorMatrix: void set(float[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>float[]</type>
                            <value>android.graphics.ColorMatrix: void set(float[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.BaseTextRenderer: void &lt;init&gt;(jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.BaseTextRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-731">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-732">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-733">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-734">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-735">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-736">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-737">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-738">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-739">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-740">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-741">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-742">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-743">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: void sendMouseEventCode(android.view.MotionEvent,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-744">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void notifyNewOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-745">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void notifyNewOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-746">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void notifyNewOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-747">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void notifyNewOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-748">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void notifyNewOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-749">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-750">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-751">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-752">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-753">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-754">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-755">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-756">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-757">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-758">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-759">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-760">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-761">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void finish()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-762">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void notifyNewOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-763">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendEmptyMessage(int)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendEmptyMessage(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.os.Handler: boolean sendEmptyMessage(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession: void notifyNewOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-764">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-765">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-766">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-767">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-768">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-769">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-770">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-771">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-772">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-773">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-774">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r0.&lt;android.os.ParcelFileDescriptor: int getFd()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.ParcelFileDescriptor: int getFd()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.FdHelperHoneycomb: int getFd_ds_method_clone_2(android.os.ParcelFileDescriptor)&gt;</method>
                <classname>jackpal.androidterm.FdHelperHoneycomb</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-775">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-776">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-777">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Handler: boolean sendMessage(android.os.Message)</statementfull>
                    <statementgeneric>android.os.Handler: boolean sendMessage(android.os.Message)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Message</type>
                            <value>android.os.Handler: boolean sendMessage(android.os.Message</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-778">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-779">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-780">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-781">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-782">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-783">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-784">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-785">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-786">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-787">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-788">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-789">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-790">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-791">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-792">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-793">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-794">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-795">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-796">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-797">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-798">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-799">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-800">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-801">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.FileOutputStream: void write(byte[],int,int)</statementfull>
                    <statementgeneric>java.io.FileOutputStream: void write(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.FileOutputStream: void write(byte[],int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$3: void writeToOutput()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$3</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-802">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-803">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-804">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-805">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-806">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-807">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-808">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-809">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-810">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-811">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-812">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-813">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-814">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-815">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-816">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-817">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-818">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-819">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-820">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-821">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-822">
            <reference type="from">
                <statement>
                    <statementfull>	$r1 = virtualinvoke $r0.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.FileCompat$Api8OrEarlier: boolean canExecute(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.compat.FileCompat$Api8OrEarlier</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-823">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-824">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-825">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-826">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TerminalEmulator: void append(byte[],int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TerminalEmulator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-827">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-828">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-829">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-830">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-831">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-832">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-833">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-834">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-835">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-836">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-837">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-838">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-839">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-840">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-841">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-842">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-843">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-844">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-845">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-846">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-847">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-848">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-849">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-850">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-851">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-852">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-853">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-854">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-855">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-856">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-857">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-858">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-859">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-860">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-861">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-862">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-863">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-864">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-865">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-866">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-867">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-868">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-869">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-870">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-871">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-872">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-873">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-874">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-875">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-876">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-877">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-878">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-879">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-880">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-881">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-882">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-883">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-884">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-885">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-886">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-887">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-888">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-889">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-890">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-891">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-892">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-893">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-894">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-895">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: int externalToInternalRow(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-896">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-897">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: void blockSet(int,int,int,int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-898">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.UnicodeTranscript: boolean setChar(int,int,int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.UnicodeTranscript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-899">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-900">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-901">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-902">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-903">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-904">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-905">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-906">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-907">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-908">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-909">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-910">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-911">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-912">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-913">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-914">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-915">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-916">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-917">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-918">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-919">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-920">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-921">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-922">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setText(java.lang.CharSequence)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.CharSequence</type>
                            <value>android.content.ClipboardManager: void setText(java.lang.CharSequence</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-923">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-924">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-925">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-926">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-927">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-928">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-929">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-930">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-931">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-932">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-933">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-934">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-935">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-936">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-937">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-938">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-939">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-940">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-941">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-942">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-943">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-944">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-945">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-946">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: void setText(java.lang.CharSequence)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-947">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-948">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-949">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-950">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-951">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-952">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-953">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-954">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-955">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-956">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-957">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-958">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-959">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-960">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-961">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-962">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-963">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-964">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-965">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-966">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-967">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-968">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-969">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-970">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_32(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void buildShortcut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-971">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$1: void onFocusChange(android.view.View,boolean)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$1</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-972">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = staticinvoke &lt;android.os.Process: int myPid_ds_method_clone_5()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myPid_ds_method_clone_5()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-973">
            <reference type="from">
                <statement>
                    <statementfull>	$l1 = staticinvoke &lt;java.lang.System: long nanoTime()&gt;() (DATE_TIME)</statementfull>
                    <statementgeneric>java.lang.System: long nanoTime()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-974">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;java.io.File: java.lang.String getCanonicalPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getCanonicalPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-975">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.view.KeyCharacterMap: int getModifierBehavior()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyCharacterMap: int getModifierBehavior()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater: int getModifierBehaviour()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.KeyCharacterMapCompat$KeyCharacterMapApi11OrLater</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-976">
            <reference type="from">
                <statement>
                    <statementfull>	$r24 = virtualinvoke $r23.&lt;java.io.File: java.lang.String getPath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.lang.String getCanonicalPath(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-977">
            <reference type="from">
                <statement>
                    <statementfull>	$r12 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getFragment()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getFragment()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-978">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.io.File: java.io.File getParentFile()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.io.File getParentFile()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut$2: void onClick(android.view.View)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-979">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r7.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator$2: boolean onKey(android.view.View,int,android.view.KeyEvent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-980">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r12.&lt;android.net.Uri: java.lang.String getPath()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getPath()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-981">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r2.&lt;android.content.ClipData: android.content.ClipData$Item getItemAt(int)&gt;(0) (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData: android.content.ClipData$Item getItemAt(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-982">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r1.&lt;android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)&gt;(0, $i15, class "android/text/style/URLSpan") (text)</statementfull>
                    <statementgeneric>android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i15</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Class</type>
                            <value>class "android/text/style/URLSpan"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.EmulatorView: int createLinks(int)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.EmulatorView</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-983">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r3.&lt;java.security.SecureRandom: void nextBytes(byte[])&gt;($r2) (RANDOM_NUMBER)</statementfull>
                    <statementgeneric>java.security.SecureRandom: void nextBytes(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.util.ShortcutEncryption: java.lang.String encrypt(java.lang.String,jackpal.androidterm.util.ShortcutEncryption$Keys)&gt;</method>
                <classname>jackpal.androidterm.util.ShortcutEncryption</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-984">
            <reference type="from">
                <statement>
                    <statementfull>	$i7 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getUnicodeChar(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getUnicodeChar(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermKeyListener: void keyDown(int,android.view.KeyEvent,boolean,boolean)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermKeyListener</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-985">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r7.&lt;android.graphics.Paint: float getFontSpacing()&gt;() (graphics)</statementfull>
                    <statementgeneric>android.graphics.Paint: float getFontSpacing()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.PaintRenderer: void &lt;init&gt;(int,jackpal.androidterm.emulatorview.ColorScheme)&gt;</method>
                <classname>jackpal.androidterm.emulatorview.PaintRenderer</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-986">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r4.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RemoteInterface: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RemoteInterface</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-987">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r3.&lt;android.content.ClipData$Item: java.lang.CharSequence getText()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipData$Item: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-988">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.content.Intent: int getFlags()&gt;() (content)</statementfull>
                    <statementgeneric>android.content.Intent: int getFlags()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.Term: void onNewIntent(android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.Term</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-989">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r7.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-990">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.RunScript: void handleIntent()&gt;</method>
                <classname>jackpal.androidterm.RunScript</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-991">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r1.&lt;android.content.ClipboardManager: android.content.ClipData getPrimaryClip()&gt;() (CLIPBOARD)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: android.content.ClipData getPrimaryClip()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11: java.lang.CharSequence getText()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.compat.ClipboardManagerCompatV11</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-992">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r3.&lt;java.io.InputStream: int read(byte[])&gt;($r2) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.emulatorview.TermSession$2: void run()&gt;</method>
                <classname>jackpal.androidterm.emulatorview.TermSession$2</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-993">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = staticinvoke &lt;android.os.Process: int myUid()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>android.os.Process: int myUid()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.compat.PRNGFixes: byte[] generateSeed()&gt;</method>
                <classname>jackpal.androidterm.compat.PRNGFixes</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-994">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.AddShortcut: void onActivityResult(int,int,android.content.Intent)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.AddShortcut</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;jackpal.androidterm.shortcuts.FSNavigator: java.io.File chdir(java.io.File)&gt;</method>
                <classname>jackpal.androidterm.shortcuts.FSNavigator</classname>
                <app>
                    <file>jackpal.androidterm_72.apk</file>
                    <hashes>
                        <hash type="MD5">8bbc3d9173e6d6b19e561a8651e83731</hash>
                        <hash type="SHA-1">fd0e0c904a55e0419e98be67467db446c3af7f47</hash>
                        <hash type="SHA-256">95095176ca3fa421102352ecaea0fffb6d13527db023967a7cfa280f7bc05cb5</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-995">
            <reference type="from">
                <statement>
                    <statementfull>	$l24 = virtualinvoke $r37.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-996">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-997">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-998">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-999">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1000">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementfull>
                    <statementgeneric>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int[]</type>
                            <value>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1001">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.Runtime: java.lang.Process exec(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1002">
            <reference type="from">
                <statement>
                    <statementfull>	$l28 = virtualinvoke $r6.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1003">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1004">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setOutputDir(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1005">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.Runtime: java.lang.Process exec(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1006">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1007">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setSuPath(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1008">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setSuPath(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1009">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1010">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void onSensorChanged(android.hardware.SensorEvent)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1011">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1012">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1013">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1014">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1015">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1016">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1017">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setSuPath(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1018">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.Runtime: java.lang.Process exec(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1019">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_61.xml" id="ds-1020">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_17(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1021">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setOutputDir(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1022">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1023">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1024">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setOutputDir(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1025">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setOutputDir(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1026">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementfull>
                    <statementgeneric>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int[]</type>
                            <value>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1027">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementfull>
                    <statementgeneric>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int[]</type>
                            <value>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1028">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean setSuPath(android.content.Context,java.lang.String)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1029">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1030">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1031">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1032">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.Runtime: java.lang.Process exec(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1033">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;android.media.RingtoneManager: android.net.Uri getDefaultUri(int)&gt;(2) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.media.RingtoneManager: android.net.Uri getDefaultUri(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void notifyUser()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.Runtime: java.lang.Process exec(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1034">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1035">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void onSensorChanged(android.hardware.SensorEvent)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1036">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1037">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementfull>
                    <statementgeneric>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int[]</type>
                            <value>android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1038">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1039">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1040">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;android.media.RingtoneManager: android.net.Uri getDefaultUri(int)&gt;(2) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.media.RingtoneManager: android.net.Uri getDefaultUri(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void notifyUser()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1041">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1042">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_72.xml" id="ds-1043">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void updateCommand(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1044">
            <reference type="from">
                <statement>
                    <statementfull>	$l28 = virtualinvoke $r6.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.Runtime: java.lang.Process exec(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1045">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.lang.Runtime: java.lang.Process exec(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1046">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1047">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void onSensorChanged(android.hardware.SensorEvent)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1048">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void onSensorChanged(android.hardware.SensorEvent)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1049">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1050">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;android.media.RingtoneManager: android.net.Uri getDefaultUri(int)&gt;(2) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.media.RingtoneManager: android.net.Uri getDefaultUri(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void notifyUser()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1051">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementfull>
                    <statementgeneric>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1052">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1053">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1054">
            <reference type="from">
                <statement>
                    <statementfull>	$l28 = virtualinvoke $r6.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1055">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1056">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1057">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1058">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1059">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1060">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1061">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1062">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1063">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1064">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1065">
            <reference type="from">
                <statement>
                    <statementfull>	$l28 = virtualinvoke $r6.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1066">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1067">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;android.media.RingtoneManager: android.net.Uri getDefaultUri(int)&gt;(2) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.media.RingtoneManager: android.net.Uri getDefaultUri(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void notifyUser()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1068">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1069">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1070">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1071">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;android.media.RingtoneManager: android.net.Uri getDefaultUri(int)&gt;(2) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.media.RingtoneManager: android.net.Uri getDefaultUri(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void notifyUser()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.CameraButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;</method>
                <classname>net.tedstein.AndroSS.CameraButtonReceiver</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1072">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;android.media.RingtoneManager: android.net.Uri getDefaultUri(int)&gt;(2) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.media.RingtoneManager: android.net.Uri getDefaultUri(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void notifyUser()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1073">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1074">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1075">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1076">
            <reference type="from">
                <statement>
                    <statementfull>	$l28 = virtualinvoke $r6.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1077">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: boolean init()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1078">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1079">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1080">
            <reference type="from">
                <statement>
                    <statementfull>	$l28 = virtualinvoke $r6.&lt;java.util.Calendar: long getTimeInMillis()&gt;() (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: long getTimeInMillis()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void takeScreenshot()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1081">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1082">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;android.media.RingtoneManager: android.net.Uri getDefaultUri(int)&gt;(2) (FILE_INFORMATION)</statementfull>
                    <statementgeneric>android.media.RingtoneManager: android.net.Uri getDefaultUri(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void notifyUser()&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1083">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1084">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1085">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.ConfigurationActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.ConfigurationActivity</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1086">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.DebugInfo: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.DebugInfo</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1087">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.DebugInfo: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.DebugInfo</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1088">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.DebugInfo: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.DebugInfo</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1089">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.DebugInfo: void onCreate(android.os.Bundle)&gt;</method>
                <classname>net.tedstein.AndroSS.DebugInfo</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1090">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)&gt;</method>
                <classname>net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1091">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)&gt;</method>
                <classname>net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1092">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)&gt;</method>
                <classname>net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1093">
            <reference type="from">
                <statement>
                    <statementfull>	$i5 = virtualinvoke $r1.&lt;java.util.Calendar: int get(int)&gt;(12) (CALENDAR)</statementfull>
                    <statementgeneric>java.util.Calendar: int get(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>12</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: java.lang.String calToStr(java.util.Calendar)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)&gt;</method>
                <classname>net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1094">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r3.&lt;java.lang.Runtime: java.lang.Process exec(java.lang.String)&gt;($r10) (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.Runtime: java.lang.Process exec(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>$r10</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void createExternalBinary(android.content.Context)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)&gt;</method>
                <classname>net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_limitcontextforcomplex.xml" id="ds-1095">
            <reference type="from">
                <statement>
                    <statementfull>	$r9 = virtualinvoke $r4.&lt;android.content.Context: java.lang.String getString(int,java.lang.Object[])&gt;(2131034135, $r5) (RESOURCES)</statementfull>
                    <statementgeneric>android.content.Context: java.lang.String getString(int,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2131034135</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.MoreSettings$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)&gt;</method>
                <classname>net.tedstein.AndroSS.MoreSettings$1</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)&gt;</method>
                <classname>net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1096">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r3.&lt;java.io.File: java.lang.String getName()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getName()</statementgeneric>
                </statement>
                <method>&lt;net.tedstein.AndroSS.AndroSSService: void registerNewScreenshot(java.lang.String,long)&gt;</method>
                <classname>net.tedstein.AndroSS.AndroSSService</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)&gt;</method>
                <classname>net.tedstein.AndroSS.GLDetector$GLVendorDetectionRenderer</classname>
                <app>
                    <file>net.tedstein.AndroSS_17.apk</file>
                    <hashes>
                        <hash type="MD5">80674fc9bb4f740411d11b2119d1ffb1</hash>
                        <hash type="SHA-1">7925a67bca46236700f6f7bc7ae9a9c700b7c9ce</hash>
                        <hash type="SHA-256">9a490b385c6f3c3fae902ff366a25d33c0c987afd7f944d2c9a95acd25e8ac9f</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1097">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1098">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1099">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1100">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1101">
            <reference type="from">
                <statement>
                    <statementfull>	$r14 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.CallLogAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.CallLogAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1102">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1103">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1104">
            <reference type="from">
                <statement>
                    <statementfull>	$r36 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.ContactsAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1105">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1106">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1107">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1108">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1109">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-1110">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-1111">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1112">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1113">
            <reference type="from">
                <statement>
                    <statementfull>	$r16 = virtualinvoke $r14.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r15) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1114">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onSaveInstanceState(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1115">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1116">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1117">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1118">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1119">
            <reference type="from">
                <statement>
                    <statementfull>	$r36 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.ContactsAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1120">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1121">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1122">
            <reference type="from">
                <statement>
                    <statementfull>	$r16 = virtualinvoke $r14.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r15) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1123">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-1124">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1125">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1126">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1127">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_transfertaintfield.xml" id="ds-1128">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1129">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1130">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1131">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1132">
            <reference type="from">
                <statement>
                    <statementfull>	$r14 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.CallLogAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.CallLogAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1133">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1134">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1135">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1136">
            <reference type="from">
                <statement>
                    <statementfull>	$r36 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.ContactsAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_15(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_15(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_15(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1137">
            <reference type="from">
                <statement>
                    <statementfull>	$r14 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.CallLogAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.CallLogAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1138">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1139">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1140">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1141">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1142">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1143">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1144">
            <reference type="from">
                <statement>
                    <statementfull>	$r16 = virtualinvoke $r14.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r15) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-1145">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1146">
            <reference type="from">
                <statement>
                    <statementfull>	$r14 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.CallLogAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.CallLogAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_61.xml" id="ds-1147">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-1148">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1149">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r7) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r7</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1150">
            <reference type="from">
                <statement>
                    <statementfull>	$r36 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.ContactsAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1151">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1152">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1153">
            <reference type="from">
                <statement>
                    <statementfull>	$r16 = virtualinvoke $r14.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r15) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1154">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1155">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_61.xml" id="ds-1156">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1157">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1158">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1159">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1160">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1161">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1162">
            <reference type="from">
                <statement>
                    <statementfull>	$r16 = virtualinvoke $r14.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r15) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1163">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_61.xml" id="ds-1164">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_61.xml" id="ds-1165">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-1166">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1167">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1168">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1169">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1170">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1171">
            <reference type="from">
                <statement>
                    <statementfull>	$r14 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.CallLogAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.CallLogAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_15(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_15(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_15(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1172">
            <reference type="from">
                <statement>
                    <statementfull>	$r14 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.CallLogAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.CallLogAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1173">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1174">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-1175">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1176">
            <reference type="from">
                <statement>
                    <statementfull>	$r16 = virtualinvoke $r14.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r15) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1177">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1178">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_61.xml" id="ds-1179">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1180">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void callNumberAndFinish(java.lang.CharSequence)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-1181">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1182">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1183">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1184">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1185">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1186">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1187">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_61.xml" id="ds-1188">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_9(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1189">
            <reference type="from">
                <statement>
                    <statementfull>	$r36 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.ContactsAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1190">
            <reference type="from">
                <statement>
                    <statementfull>	$r16 = virtualinvoke $r14.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r15) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_40.xml" id="ds-1191">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1192">
            <reference type="from">
                <statement>
                    <statementfull>	$r14 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString_ds_method_clone_2(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.CallLogAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.CallLogAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1193">
            <reference type="from">
                <statement>
                    <statementfull>	$r36 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.ContactsAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1194">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1195">
            <reference type="from">
                <statement>
                    <statementfull>	$r36 = staticinvoke &lt;android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)&gt;($l0) (text.format)</statementfull>
                    <statementgeneric>android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>long</type>
                            <value>$l0</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>org.dnaq.dialer2.ContactsAdapter</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1196">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1197">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1198">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_13(java.lang.String,java.lang.String,java.lang.Throwable</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1199">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentValues: void putNull(java.lang.String)</statementfull>
                    <statementgeneric>android.content.ContentValues: void putNull(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.content.ContentValues: void putNull(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void updateMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1200">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementfull>
                    <statementgeneric>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCalls()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-1201">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1202">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1203">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1204">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void selectSpeedDialNumber(java.util.ArrayList,java.util.ArrayList)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1205">
            <reference type="from">
                <statement>
                    <statementfull>	$r16 = virtualinvoke $r14.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r15) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1206">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void applySettings(android.content.SharedPreferences)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1207">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void dialNumber(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_72.xml" id="ds-1208">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = virtualinvoke $r9.&lt;java.lang.Class: java.lang.Class[] getDeclaredClasses()&gt;() (lang)</statementfull>
                    <statementgeneric>java.lang.Class: java.lang.Class[] getDeclaredClasses()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_72.xml" id="ds-1209">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_transfertaintfield.xml" id="ds-1210">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)&gt;($r4, $r5) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact_ds_method_clone_2(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r5</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.AsyncContactImageLoader: android.graphics.drawable.Drawable loadImageForContact(java.lang.String)&gt;</method>
                <classname>org.dnaq.dialer2.AsyncContactImageLoader</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1211">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = virtualinvoke $r3.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1212">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r2.&lt;android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)&gt;("phoneTypes") (os)</statementfull>
                    <statementgeneric>android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"phoneTypes"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.ContactViewDialog: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dnaq.dialer2.ContactViewDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_transfertaintfield.xml" id="ds-1213">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = staticinvoke &lt;android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)&gt;($r7, $r4) (CONTACT_INFORMATION)</statementfull>
                    <statementgeneric>android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r7</value>
                        </parameter>
                        <parameter>
                            <type>android.net.Uri</type>
                            <value>$r4</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity$6: void run()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity$6</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1214">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])&gt;(null, $r7) (REFLECTION)</statementfull>
                    <statementgeneric>java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>null</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.Object[]</type>
                            <value>$r7</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void clearMissedCallsNotification()&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1215">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1216">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;org.dnaq.dialer2.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>org.dnaq.dialer2.DialerActivity</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dnaq.dialer2.SelectSpeedDialSlotDialog: void onClick(android.view.View)&gt;</method>
                <classname>org.dnaq.dialer2.SelectSpeedDialSlotDialog</classname>
                <app>
                    <file>org.dnaq.dialer2_17.apk</file>
                    <hashes>
                        <hash type="MD5">1174085e22f690e6a263428a44f0999c</hash>
                        <hash type="SHA-1">5f6319ea6284bd159eaf075207a2d3002a27c688</hash>
                        <hash type="SHA-256">4f6079121dfe2f2b61df488e7288a101782b7fc3e1b63c45ef245093eff76de3</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1217">
            <reference type="from">
                <statement>
                    <statementfull>	$r143 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory_ds_method_clone_3()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory_ds_method_clone_3()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1218">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1219">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;java.lang.ProcessBuilder: java.lang.Process start()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1220">
            <reference type="from">
                <statement>
                    <statementfull>	$r84 = virtualinvoke $r82.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1221">
            <reference type="from">
                <statement>
                    <statementfull>	$r143 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory_ds_method_clone_3()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory_ds_method_clone_3()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1222">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1223">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1224">
            <reference type="from">
                <statement>
                    <statementfull>	$r212 = staticinvoke &lt;java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)&gt;("PATH") (lang)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"PATH"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1225">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;java.lang.ProcessBuilder: java.lang.Process start()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1226">
            <reference type="from">
                <statement>
                    <statementfull>	$i23 = virtualinvoke $r5.&lt;java.io.InputStream: int read(byte[])&gt;($r6) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1227">
            <reference type="from">
                <statement>
                    <statementfull>	$r84 = virtualinvoke $r82.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onDownload()&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1228">
            <reference type="from">
                <statement>
                    <statementfull>	$i23 = virtualinvoke $r5.&lt;java.io.InputStream: int read(byte[])&gt;($r6) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1229">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1230">
            <reference type="from">
                <statement>
                    <statementfull>	$r212 = staticinvoke &lt;java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)&gt;("PATH") (lang)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"PATH"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.ProcessBuilder: java.lang.Process start()</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1231">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;java.lang.ProcessBuilder: java.lang.Process start()&gt;() (OS_PROCESS)</statementfull>
                    <statementgeneric>java.lang.ProcessBuilder: java.lang.Process start()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: java.lang.String execShell(boolean,java.lang.String[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1232">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1233">
            <reference type="from">
                <statement>
                    <statementfull>	$r212 = staticinvoke &lt;java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)&gt;("PATH") (lang)</statementfull>
                    <statementgeneric>java.lang.System: java.lang.String getenv_ds_method_clone_3(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"PATH"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1234">
            <reference type="from">
                <statement>
                    <statementfull>	$r143 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory_ds_method_clone_3()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory_ds_method_clone_3()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1235">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.os.Environment: java.io.File getDataDirectory()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Environment: java.io.File getDataDirectory()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1236">
            <reference type="from">
                <statement>
                    <statementfull>	$i23 = virtualinvoke $r5.&lt;java.io.InputStream: int read(byte[])&gt;($r6) (IO)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r6</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1237">
            <reference type="from">
                <statement>
                    <statementfull>	$r84 = virtualinvoke $r82.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask: java.lang.Void doInBackground(java.lang.Void[])&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.DebianKitActivity$CourtTask</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.webkit.WebView: void loadUrl(java.lang.String)</statementfull>
                    <statementgeneric>android.webkit.WebView: void loadUrl(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.webkit.WebView: void loadUrl(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.dyndns.sven_ola.debian_kit.ReadmeActivity: void onCreate(android.os.Bundle)&gt;</method>
                <classname>org.dyndns.sven_ola.debian_kit.ReadmeActivity</classname>
                <app>
                    <file>org.dyndns.sven_ola.debian_kit_6.apk</file>
                    <hashes>
                        <hash type="MD5">f73521d18a8068ffdeedacacfc2d8fd7</hash>
                        <hash type="SHA-1">d1877b61661728befd0345eec91bb3b0f6d888a2</hash>
                        <hash type="SHA-256">dd95357a21a63baa002920574ba1b491a35c6122fffa4cbc6a1bb9481f9a5929</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1238">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1239">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r5.&lt;android.os.Parcel: byte[] marshall()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Parcel: byte[] marshall()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1240">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1241">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1242">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r1.&lt;android.view.MotionEvent: float getAxisValue(int)&gt;(15) (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: float getAxisValue(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1243">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1244">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1245">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1246">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1247">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1248">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1249">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementfull>
                    <statementgeneric>android.os.Bundle: void putIntArray(java.lang.String,int[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.os.Bundle: void putIntArray(java.lang.String,int[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.BubbleManager: void saveState(android.os.Bundle,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.BubbleManager</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1250">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r5.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.SoundManager$SoundPoolContainer: void play(java.lang.String,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.SoundManager$SoundPoolContainer</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1251">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1252">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1253">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1254">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1255">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r1.&lt;android.view.MotionEvent: float getAxisValue(int)&gt;(15) (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: float getAxisValue(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1256">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1257">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1258">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1259">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1260">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1261">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_30.xml" id="ds-1262">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1263">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1264">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1265">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1266">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-1267">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1268">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r5.&lt;android.os.Parcel: byte[] marshall()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Parcel: byte[] marshall()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1269">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1270">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1271">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1272">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1273">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1274">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1275">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r5.&lt;android.os.Parcel: byte[] marshall()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Parcel: byte[] marshall()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1276">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1277">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1278">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1279">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1280">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r1.&lt;android.view.MotionEvent: float getAxisValue(int)&gt;(15) (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: float getAxisValue(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1281">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startEditor()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1282">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1283">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1284">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1285">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1286">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1287">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1288">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1289">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1290">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r5.&lt;android.os.Parcel: byte[] marshall()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Parcel: byte[] marshall()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1291">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1292">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r1.&lt;android.view.MotionEvent: float getAxisValue(int)&gt;(15) (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: float getAxisValue(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setRequestedOrientation(int)</statementfull>
                    <statementgeneric>android.app.Activity: void setRequestedOrientation(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setRequestedOrientation(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void setTargetModeOrientation()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1293">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementfull>
                    <statementgeneric>android.os.Bundle: void writeToParcel(android.os.Parcel,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.os.Parcel</type>
                            <value>android.os.Bundle: void writeToParcel(android.os.Parcel,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1294">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1295">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r5.&lt;android.os.Parcel: byte[] marshall()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Parcel: byte[] marshall()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1296">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1297">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1298">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r1.&lt;android.view.MotionEvent: float getAxisValue(int)&gt;(15) (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: float getAxisValue(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.OutputStream: void write(byte[])</statementfull>
                    <statementgeneric>java.io.OutputStream: void write(byte[])</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>java.io.OutputStream: void write(byte[]</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1299">
            <reference type="from">
                <statement>
                    <statementfull>	$i6 = virtualinvoke $r1.&lt;android.view.MotionEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1300">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r5.&lt;android.os.Parcel: byte[] marshall()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Parcel: byte[] marshall()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1301">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1302">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1303">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1304">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1305">
            <reference type="from">
                <statement>
                    <statementfull>	$f0 = virtualinvoke $r1.&lt;android.view.MotionEvent: float getAxisValue(int)&gt;(15) (view)</statementfull>
                    <statementgeneric>android.view.MotionEvent: float getAxisValue(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>15</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onGenericMotionEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1306">
            <reference type="from">
                <statement>
                    <statementfull>	virtualinvoke $r10.&lt;java.io.InputStream: int read(byte[],int,int)&gt;($r4, 0, $i2) (BLUETOOTH)</statementfull>
                    <statementgeneric>java.io.InputStream: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r4</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>0</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1307">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1308">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1309">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_44.xml" id="ds-1310">
            <reference type="from">
                <statement>
                    <statementfull>	$i1 = virtualinvoke $r1.&lt;android.view.KeyEvent: int getDeviceId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.KeyEvent: int getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenGame: org.jfedor.frozenbubble.Sprite restoreSprite(android.os.Bundle,java.util.Vector,int)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenGame</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1311">
            <reference type="from">
                <statement>
                    <statementfull>	$i8 = virtualinvoke $r6.&lt;android.view.InputDevice: int getSources()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getSources()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1312">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_55()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1313">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()&gt;() (OS_STATE)</statementfull>
                    <statementgeneric>android.os.Parcel: android.os.Parcel obtain_ds_method_clone_16()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: android.os.Bundle restoreSavedGame()&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1314">
            <reference type="from">
                <statement>
                    <statementfull>	$i2 = virtualinvoke $r6.&lt;android.view.InputDevice: int getId()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int getId()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1315">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r5.&lt;android.os.Parcel: byte[] marshall()&gt;() (os)</statementfull>
                    <statementgeneric>android.os.Parcel: byte[] marshall()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void saveGame(android.os.Bundle)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1316">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.content.Intent: android.os.Bundle getExtras()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.os.Bundle getExtras()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.FrozenBubble: void startCustomGame(android.content.Intent)&gt;</method>
                <classname>org.jfedor.frozenbubble.FrozenBubble</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1317">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = staticinvoke &lt;android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)&gt;($i1) (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: android.view.InputDevice getDevice_ds_method_clone_2(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>$i1</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_66.xml" id="ds-1318">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = staticinvoke &lt;android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()&gt;() (view)</statementfull>
                    <statementgeneric>android.view.InputDevice: int[] getDeviceIds_ds_method_clone_2()</statementgeneric>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: boolean isRemoteInput(int)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementfull>
                    <statementgeneric>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jfedor.frozenbubble.GameView$GameThread: void &lt;init&gt;(org.jfedor.frozenbubble.GameView,android.view.SurfaceHolder)&gt;</method>
                <classname>org.jfedor.frozenbubble.GameView$GameThread</classname>
                <app>
                    <file>org.jfedor.frozenbubble_54.apk</file>
                    <hashes>
                        <hash type="MD5">574c4e306d753a228de886612ca384b6</hash>
                        <hash type="SHA-1">5917f2b614921d6455b24bed9835c71f048ac89f</hash>
                        <hash type="SHA-256">bf291a12e88c84e559bd4f0faf99163a6a5b55da995df69ef10f888c6bba77e4</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1319">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1320">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void shutdown()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1321">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_25(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void shutdown()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1322">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void shutdown()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1323">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void shutdown()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1324">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1325">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1326">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1327">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void shutdown()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1328">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void shutdown()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1329">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1330">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1331">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_23(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1332">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1333">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_20(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1334">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1335">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,org.jsl.collider.Collider,android.net.nsd.NsdManager,java.lang.String,java.lang.String,org.jsl.wfwt.SessionManager,org.jsl.collider.TimerQueue,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1336">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,org.jsl.collider.Collider,android.net.nsd.NsdManager,java.lang.String,java.lang.String,org.jsl.wfwt.SessionManager,org.jsl.collider.TimerQueue,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1337">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void stop(java.util.concurrent.CountDownLatch)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1338">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_27(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_27(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_27(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void stop(java.util.concurrent.CountDownLatch)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1339">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void stop(java.util.concurrent.CountDownLatch)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1340">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1341">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1342">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1343">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1344">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1345">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1346">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1347">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,org.jsl.collider.Collider,android.net.nsd.NsdManager,java.lang.String,java.lang.String,org.jsl.wfwt.SessionManager,org.jsl.collider.TimerQueue,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1348">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1349">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void resolveNextLocked(java.lang.String)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1350">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void resolveNextLocked(java.lang.String)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1351">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void resolveNextLocked(java.lang.String)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1352">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void resolveNextLocked(java.lang.String)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1353">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,org.jsl.collider.Collider,android.net.nsd.NsdManager,java.lang.String,java.lang.String,org.jsl.wfwt.SessionManager,org.jsl.collider.TimerQueue,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1354">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,org.jsl.collider.Collider,android.net.nsd.NsdManager,java.lang.String,java.lang.String,org.jsl.wfwt.SessionManager,org.jsl.collider.TimerQueue,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1355">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_9(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,org.jsl.collider.Collider,android.net.nsd.NsdManager,java.lang.String,java.lang.String,org.jsl.wfwt.SessionManager,org.jsl.collider.TimerQueue,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1356">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_18(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1357">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void stop(java.util.concurrent.CountDownLatch)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1358">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_27(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_27(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_27(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void stop(java.util.concurrent.CountDownLatch)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1359">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_21(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void resolveNextLocked(java.lang.String)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1360">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_13(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1361">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_26(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel: void stop(java.util.concurrent.CountDownLatch)&gt;</method>
                <classname>org.jsl.wfwt.Channel</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1362">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1363">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1364">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1365">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1366">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1367">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1368">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1369">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1370">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1371">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1372">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1373">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1374">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1375">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1376">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_15(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1377">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1378">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1379">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1380">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_19(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1381">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int e_ds_method_clone_22(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1382">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_apicalldepth1.xml" id="ds-1383">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
    <flow generating_config="config_DroidSafe_24.xml" id="ds-1384">
            <reference type="from">
                <statement>
                    <statementfull>	$i3 = virtualinvoke $r19.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_limitcontextforcomplex.xml" id="ds-1385">
            <reference type="from">
                <statement>
                    <statementfull>	$r20 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1386">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1387">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1388">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1389">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1390">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1391">
            <reference type="from">
                <statement>
                    <statementfull>	$r22 = staticinvoke &lt;android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()&gt;() (text.method)</statementfull>
                    <statementgeneric>android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1392">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1393">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1394">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1395">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1396">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1397">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1398">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1399">
            <reference type="from">
                <statement>
                    <statementfull>	$i4 = virtualinvoke $r19.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ServiceConnection</type>
                            <value>android.content.ContextWrapper: void unbindService(android.content.ServiceConnection</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onPause()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1400">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_14(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity: void onResume()&gt;</method>
                <classname>org.jsl.wfwt.MainActivity</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1401">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$5: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$5</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1402">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$5: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$5</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1403">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$5: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$5</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1404">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$5: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$5</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1405">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1406">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
    <flow generating_config="config_DroidSafe_24.xml" id="ds-1407">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1408">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1409">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_37(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1410">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_38(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1411">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.SwitchButton: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jsl.wfwt.SwitchButton</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1412">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.SwitchButton: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jsl.wfwt.SwitchButton</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1413">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.SwitchButton: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jsl.wfwt.SwitchButton</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1414">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_16(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.SwitchButton: boolean onTouchEvent(android.view.MotionEvent)&gt;</method>
                <classname>org.jsl.wfwt.SwitchButton</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1415">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1416">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onCreate()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1417">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1418">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1419">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1420">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1421">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onCreate()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1422">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onCreate()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1423">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onCreate()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1424">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1425">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1426">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1427">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1428">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1429">
            <reference type="from">
                <statement>
                    <statementfull>	$i4 = virtualinvoke $r19.&lt;android.media.AudioManager: int getStreamVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1430">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1431">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: android.os.IBinder onBind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1432">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1433">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1434">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onCreate()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1435">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1436">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: android.os.IBinder onBind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1437">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1438">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onCreate()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1439">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_8(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_8(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_8(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1440">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1441">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1442">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1443">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1444">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_3(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1445">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1446">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1447">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1448">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1449">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1450">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1451">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.media.AudioManager: void setStreamVolume(int,int,int)</statementfull>
                    <statementgeneric>android.media.AudioManager: void setStreamVolume(int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.media.AudioManager: void setStreamVolume(int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1452">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: boolean onUnbind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1453">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: boolean onUnbind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1454">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1455">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: boolean onUnbind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1456">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1457">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: android.os.IBinder onBind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1458">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: android.os.IBinder onBind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1459">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1460">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1461">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1462">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1463">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_6(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1464">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: void onDestroy()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1465">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int d_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: boolean onUnbind(android.content.Intent)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1466">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$ColliderThread: void run()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$ColliderThread</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1467">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$ColliderThread: void run()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$ColliderThread</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1468">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$ColliderThread: void run()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$ColliderThread</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_58.xml" id="ds-1469">
            <reference type="from">
                <statement>
                    <statementfull>	$i20 = virtualinvoke $r41.&lt;android.media.AudioRecord: int read(byte[],int,int)&gt;($r1, $i18, $i19) (AUDIO)</statementfull>
                    <statementgeneric>android.media.AudioRecord: int read(byte[],int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>byte[]</type>
                            <value>$r1</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i18</value>
                        </parameter>
                        <parameter>
                            <type>int</type>
                            <value>$i19</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.AudioRecorder: void run()&gt;</method>
                <classname>org.jsl.wfwt.AudioRecorder</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_2(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$ColliderThread: void run()&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$ColliderThread</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1470">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1471">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1472">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1473">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1474">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1475">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1476">
            <reference type="from">
                <statement>
                    <statementfull>	$r3 = virtualinvoke $r4.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.MainActivity$SettingsDialogClickListener: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>org.jsl.wfwt.MainActivity$SettingsDialogClickListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1477">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int i_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1478">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r1.&lt;android.net.nsd.NsdServiceInfo: int getPort()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.nsd.NsdServiceInfo: int getPort()</statementgeneric>
                </statement>
                <method>&lt;org.jsl.wfwt.Channel$ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.Channel$ResolveListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1479">
            <reference type="from">
                <statement>
                    <statementfull>	$i0 = virtualinvoke $r21.&lt;android.media.AudioManager: int getStreamMaxVolume(int)&gt;(3) (media)</statementfull>
                    <statementgeneric>android.media.AudioManager: int getStreamMaxVolume(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>3</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: int onStartCommand(android.content.Intent,int,int)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1480">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_5(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens2.xml" id="ds-1481">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = staticinvoke &lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;($r0, "android_id") (SYSTEM_SETTINGS)</statementfull>
                    <statementgeneric>android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ContentResolver</type>
                            <value>$r0</value>
                        </parameter>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>"android_id"</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService: java.lang.String getDeviceID(android.content.ContentResolver)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int w_ds_method_clone_4(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.jsl.wfwt.WalkieService$DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)&gt;</method>
                <classname>org.jsl.wfwt.WalkieService$DiscoveryListener</classname>
                <app>
                    <file>org.jsl.wfwt_14.apk</file>
                    <hashes>
                        <hash type="MD5">154bb40a6c1855b96646e58abbeeaad8</hash>
                        <hash type="SHA-1">a4a0c9125e0c0e4c940a17ef303157ce6e8bc85d</hash>
                        <hash type="SHA-256">24a4009f798a2ac2502c406900577f54460db67819e55b33c216c444ed2644cc</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1482">
            <reference type="from">
                <statement>
                    <statementfull>	$r22 = virtualinvoke $r10.&lt;java.io.File: java.lang.String getAbsolutePath()&gt;() (FILE_INFORMATION)</statementfull>
                    <statementgeneric>java.io.File: java.lang.String getAbsolutePath()</statementgeneric>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1483">
            <reference type="from">
                <statement>
                    <statementfull>	$r4 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity$1: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>org.tuxpaint.ConfigActivity$1</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1484">
            <reference type="from">
                <statement>
                    <statementfull>	$r28 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_4()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_4()</statementgeneric>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1485">
            <reference type="from">
                <statement>
                    <statementfull>	$r29 = virtualinvoke $r28.&lt;java.util.Locale: java.lang.String toString()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.lang.String toString()</statementgeneric>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementfull>
                    <statementgeneric>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>android.util.Log: int v_ds_method_clone_24(java.lang.String,java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;org.tuxpaint.ConfigActivity: void load()&gt;</method>
                <classname>org.tuxpaint.ConfigActivity</classname>
                <app>
                    <file>org.tuxpaint_923.apk</file>
                    <hashes>
                        <hash type="MD5">f3c671400f1fe34052afe99c2f93a4be</hash>
                        <hash type="SHA-1">c0572d7de6f7225224447d885b54d73ddf5f8315</hash>
                        <hash type="SHA-256">c08623aed49efc36eec6a6db4bdaaa80338926223b82e0d2b5555bd75732c72b</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_8.xml" id="ds-1486">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r2.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;pt.isec.tp.am.Score: void onLoad_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>pt.isec.tp.am.Score</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int)</statementfull>
                    <statementgeneric>android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;pt.isec.tp.am.Help: void onCreate(android.os.Bundle)&gt;</method>
                <classname>pt.isec.tp.am.Help</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1487">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r2.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;pt.isec.tp.am.Score: void onLoad_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>pt.isec.tp.am.Score</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>java.io.Writer: void write(java.lang.String)</statementfull>
                    <statementgeneric>java.io.Writer: void write(java.lang.String)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.String</type>
                            <value>java.io.Writer: void write(java.lang.String</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;pt.isec.tp.am.Score: void onSave(android.content.Context,java.lang.Integer)&gt;</method>
                <classname>pt.isec.tp.am.Score</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_14.xml" id="ds-1488">
            <reference type="from">
                <statement>
                    <statementfull>	$r5 = virtualinvoke $r2.&lt;java.io.BufferedReader: java.lang.String readLine()&gt;() (IO)</statementfull>
                    <statementgeneric>java.io.BufferedReader: java.lang.String readLine()</statementgeneric>
                </statement>
                <method>&lt;pt.isec.tp.am.Score: void onLoad_ds_method_clone_2(android.content.Context)&gt;</method>
                <classname>pt.isec.tp.am.Score</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;pt.isec.tp.am.TP_AMActivity: void OnClickSettings(android.view.View)&gt;</method>
                <classname>pt.isec.tp.am.TP_AMActivity</classname>
                <app>
                    <file>pt.isec.tp.am_4.apk</file>
                    <hashes>
                        <hash type="MD5">f29cd31567610c86559045ba582b8545</hash>
                        <hash type="SHA-1">61f442b079bec04305aa7dd243babd1c94919c6c</hash>
                        <hash type="SHA-256">3eb2e58eb7d93ba5d583bb42970ec8d5976631cc91d7a1a2bf85540cc3985de7</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1489">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r10.&lt;java.util.Locale: java.lang.String getCountry()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.lang.String getCountry()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1490">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1491">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1492">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1493">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_9()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_9()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.LogEntryAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>ru.henridellal.dialer.LogEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1494">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1495">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_3()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_3()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1496">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = staticinvoke &lt;java.text.DateFormat: java.text.DateFormat getTimeInstance(int)&gt;(2) (text)</statementfull>
                    <statementgeneric>java.text.DateFormat: java.text.DateFormat getTimeInstance(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void showInformationDialog(long)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1497">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_15()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_15()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.LogEntryAdapter: void unknownNumberDialog(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.LogEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1498">
            <reference type="from">
                <statement>
                    <statementfull>$r3 = virtualinvoke $r2.&lt;android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()&gt;()</statementfull>
                    <statementgeneric>android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: boolean onLongClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementfull>
                    <statementgeneric>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>java.lang.Object</type>
                            <value>android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1499">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = staticinvoke &lt;java.text.DateFormat: java.text.DateFormat getTimeInstance(int)&gt;(2) (text)</statementfull>
                    <statementgeneric>java.text.DateFormat: java.text.DateFormat getTimeInstance(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void showInformationDialog(long)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1500">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r10.&lt;java.util.Locale: java.lang.String getCountry()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.lang.String getCountry()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1501">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1502">
            <reference type="from">
                <statement>
                    <statementfull>$r3 = virtualinvoke $r2.&lt;android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()&gt;()</statementfull>
                    <statementgeneric>android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: boolean onLongClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1503">
            <reference type="from">
                <statement>
                    <statementfull>$r2 = virtualinvoke $r4.&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;()</statementfull>
                    <statementgeneric>android.telephony.TelephonyManager: java.lang.String getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void showDeviceId()&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1504">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_3()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_3()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1505">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_15()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_15()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.LogEntryAdapter: void unknownNumberDialog(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.LogEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1506">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_9()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_9()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.LogEntryAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>ru.henridellal.dialer.LogEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1507">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1508">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementfull>
                    <statementgeneric>android.content.ContextWrapper: void sendBroadcast(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.content.ContextWrapper: void sendBroadcast(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1509">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_9()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_9()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.LogEntryAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>ru.henridellal.dialer.LogEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1510">
            <reference type="from">
                <statement>
                    <statementfull>$r3 = virtualinvoke $r2.&lt;android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()&gt;()</statementfull>
                    <statementgeneric>android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: boolean onLongClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1511">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1512">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = staticinvoke &lt;java.text.DateFormat: java.text.DateFormat getTimeInstance(int)&gt;(2) (text)</statementfull>
                    <statementgeneric>java.text.DateFormat: java.text.DateFormat getTimeInstance(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void showInformationDialog(long)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1513">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1514">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1515">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r10.&lt;java.util.Locale: java.lang.String getCountry()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.lang.String getCountry()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1516">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_15()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_15()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.LogEntryAdapter: void unknownNumberDialog(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.LogEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1517">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1518">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_3()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_3()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementfull>
                    <statementgeneric>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.ClipData</type>
                            <value>android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity$7: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity$7</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1519">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerPreferencesActivity: void onBackPressed()&gt;</method>
                <classname>ru.henridellal.dialer.DialerPreferencesActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-1520">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerPreferencesActivity: void onBackPressed()&gt;</method>
                <classname>ru.henridellal.dialer.DialerPreferencesActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_11.xml" id="ds-1521">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivity(android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivity(android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivity(android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerPreferencesActivity: void onBackPressed()&gt;</method>
                <classname>ru.henridellal.dialer.DialerPreferencesActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_61.xml" id="ds-1522">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void setResult(int,android.content.Intent)</statementfull>
                    <statementgeneric>android.app.Activity: void setResult(int,android.content.Intent)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>android.app.Activity: void setResult(int,android.content.Intent</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.PickContactNumberActivity: void onBackPressed()&gt;</method>
                <classname>ru.henridellal.dialer.PickContactNumberActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1523">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_24.xml" id="ds-1524">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.widget.TextView: java.lang.CharSequence getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.TextView: java.lang.CharSequence getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1525">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_9()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_9()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.LogEntryAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)&gt;</method>
                <classname>ru.henridellal.dialer.LogEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1526">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r1.&lt;android.content.Intent: android.net.Uri getData()&gt;() (IPC)</statementfull>
                    <statementgeneric>android.content.Intent: android.net.Uri getData()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1527">
            <reference type="from">
                <statement>
                    <statementfull>$r3 = virtualinvoke $r2.&lt;android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()&gt;()</statementfull>
                    <statementgeneric>android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: boolean onLongClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1528">
            <reference type="from">
                <statement>
                    <statementfull>	$r10 = staticinvoke &lt;java.text.DateFormat: java.text.DateFormat getTimeInstance(int)&gt;(2) (text)</statementfull>
                    <statementgeneric>java.text.DateFormat: java.text.DateFormat getTimeInstance(int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>int</type>
                            <value>2</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void showInformationDialog(long)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1529">
            <reference type="from">
                <statement>
                    <statementfull>	$r11 = virtualinvoke $r10.&lt;java.util.Locale: java.lang.String getCountry()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.lang.String getCountry()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1530">
            <reference type="from">
                <statement>
                    <statementfull>	$r6 = virtualinvoke $r5.&lt;android.widget.EditText: android.text.Editable getText()&gt;() (USER_INPUT)</statementfull>
                    <statementgeneric>android.widget.EditText: android.text.Editable getText()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void onClick(android.view.View)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1531">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_15()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_15()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.LogEntryAdapter: void unknownNumberDialog(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.LogEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_75.xml" id="ds-1532">
            <reference type="from">
                <statement>
                    <statementfull>	$r8 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getSchemeSpecificPart()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getSchemeSpecificPart()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1533">
            <reference type="from">
                <statement>
                    <statementfull>	$r7 = virtualinvoke $r6.&lt;android.net.Uri: java.lang.String getScheme()&gt;() (NETWORK)</statementfull>
                    <statementgeneric>android.net.Uri: java.lang.String getScheme()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void parseIntent(android.content.Intent)&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1534">
            <reference type="from">
                <statement>
                    <statementfull>	$r2 = staticinvoke &lt;java.util.Locale: java.util.Locale getDefault_ds_method_clone_3()&gt;() (LOCATION)</statementfull>
                    <statementgeneric>java.util.Locale: java.util.Locale getDefault_ds_method_clone_3()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.ContactsEntryAdapter: java.lang.String formatNumber(java.lang.String)&gt;</method>
                <classname>ru.henridellal.dialer.ContactsEntryAdapter</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        <flow generating_config="config_DroidSafe_kobjsens1.xml" id="ds-1535">
            <reference type="from">
                <statement>
                    <statementfull>$r2 = virtualinvoke $r4.&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;()</statementfull>
                    <statementgeneric>android.telephony.TelephonyManager: java.lang.String getDeviceId()</statementgeneric>
                </statement>
                <method>&lt;ru.henridellal.dialer.DialerActivity: void showDeviceId()&gt;</method>
                <classname>ru.henridellal.dialer.DialerActivity</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
            <reference type="to">
                <statement>
                    <statementfull>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementfull>
                    <statementgeneric>android.app.Activity: void startActivityForResult(android.content.Intent,int)</statementgeneric>
                    <parameters>
                        <parameter>
                            <type>android.content.Intent</type>
                            <value>android.app.Activity: void startActivityForResult(android.content.Intent,int</value>
                        </parameter>
                    </parameters>
                </statement>
                <method>&lt;ru.henridellal.dialer.SpeedDialActivity$4: void onClick(android.content.DialogInterface,int)&gt;</method>
                <classname>ru.henridellal.dialer.SpeedDialActivity$4</classname>
                <app>
                    <file>ru.henridellal.dialer_10.apk</file>
                    <hashes>
                        <hash type="MD5">92cd509647ee4bfdbc82f81db4f3c072</hash>
                        <hash type="SHA-1">b0319157f6186270c132e712c3a1f6224b0c5eea</hash>
                        <hash type="SHA-256">dbc54bee6748bdfdc1a92d13fe4a3273e469e54b06ebdd122ab9f1db541ceb80</hash>
                    </hashes>
                </app>
            </reference>
        </flow>
        </flows>